def server
def rtMaven
def buildInfo

def RESOLVE_SNAPSHOT_REPO = 'slash-maven-virtual'
def RESOLVE_RELEASE_REPO = 'slash-maven-virtual'
def DEPLOY_SNAPSHOT_REPO = 'slash-maven-virtual'
def DEPLOY_RELEASE_REPO = 'slash-maven-virtual'

node('master') {
    stage('Artifactory configuration') {
        server = Artifactory.server 'JFrogChina-Server'
        rtMaven = Artifactory.newMavenBuild()
        rtMaven.tool = 'maven'
        rtMaven.deployer releaseRepo:DEPLOY_RELEASE_REPO, snapshotRepo:DEPLOY_SNAPSHOT_REPO, server: server
        rtMaven.resolver releaseRepo:RESOLVE_RELEASE_REPO, snapshotRepo:RESOLVE_SNAPSHOT_REPO, server: server
        rtMaven.deployer.deployArtifacts = false
        buildInfo = Artifactory.newBuildInfo()
        buildInfo.env.capture = true
    }
    stage('Check out') {
        git url: 'git@github.com:slash-l/app-maven.git'
    }
    stage('Maven Build') {
        rtMaven.tool = 'maven'
        rtMaven.run pom: 'pom.xml', goals: 'clean install', buildInfo: buildInfo
    }

    stage ('Git msg collection') {
        sh "jf rt bag ${JOB_NAME} ${BUILD_NUMBER} --config=/Users/jingyil/work/jfrog/project/jfrog-tools/jfrog-cli-aql/buildInfo/jira-cli.conf";
        server.publishBuildInfo buildInfo
    }

    stage('Xray Scan') {
        def xrayConfig = [
            'buildName': env.JOB_NAME,
            'buildNumber': env.BUILD_NUMBER,
            'failBuild': true
        ]
        def xrayResults = server.xrayScan xrayConfig
//        echo xrayResults as String
        xrayurl = readJSON text:xrayResults.toString()
//        echo xrayurl as String
        rtMaven.deployer.addProperty("scan", "true")
        rtMaven.deployer.addProperty("xrayresult.summary.total_alerts", xrayurl.summary.total_alerts as String)
    }

    stage('Publish To Dev Repo') {
        rtMaven.deployer.deployArtifacts buildInfo
    }

    stage ('Promotion') {

        promotionConfig = [
                //Mandatory parameters
                'buildName'          : buildInfo.name,
                'buildNumber'        : buildInfo.number,
                'targetRepo'         : 'slash-maven-test-local',

                //Optional parameters
                'comment'            : 'this is the promotion comment',
                'sourceRepo'         : 'slash-maven-dev-local',
                'status'             : 'Released',
                'includeDependencies': true,
                'failFast'           : true,
                'copy'               : false
        ]

        // Promote build
        server.promote promotionConfig
    }

}
